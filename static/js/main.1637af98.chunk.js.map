{"version":3,"sources":["Menu.js","Contact.js","About.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Menu","class","to","className","Contact","src","alt","icon","faGithub","size","faLinkedin","faTwitter","faFacebook","About","Home","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gQAiBeA,G,YAbF,WAET,OACI,yBAAKC,MAAM,WACH,4BACI,4BAAI,kBAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,QAAvB,SACJ,wBAAIF,MAAM,eAAc,kBAAC,IAAD,CAAMC,GAAG,QAAQC,UAAU,QAA3B,UACxB,wBAAIF,MAAM,eAAc,kBAAC,IAAD,CAAMC,GAAG,UAAUC,UAAU,QAA7B,gB,eCkC7BC,EAxCC,WAEZ,OACS,6BACK,yBAAKD,UAAU,cACX,2CACA,2BAAG,8CAAH,MAEJ,yBAAKA,UAAU,SACb,yBAAKE,IAAI,wBAAwBC,IAAI,WAAWH,UAAU,mBAE5D,yBAAKA,UAAU,YACb,+CACA,yDACA,qEACA,yBAAKA,UAAU,gBACX,4BACI,4BACI,kBAAC,IAAD,CAAMD,GAAG,kCAAkCC,UAAU,QAArD,IAA6D,kBAAC,IAAD,CAAiBI,KAAMC,IAAWC,KAAK,SAGxG,wBAAMN,UAAU,aACZ,kBAAC,IAAD,CAAMD,GAAG,uDAAuDC,UAAU,QAAO,kBAAC,IAAD,CAAiBI,KAAMG,IAAaD,KAAK,SAG9H,4BACI,kBAAC,IAAD,CAAMP,GAAG,sCAAsCC,UAAU,QAAO,kBAAC,IAAD,CAAiBI,KAAMI,IAAYF,KAAK,UAG5G,wBAAMN,UAAU,aACZ,kBAAC,IAAD,CAAMD,GAAG,mDAAmDC,UAAU,QAAO,kBAAC,IAAD,CAAiBI,KAAMK,IAAaH,KAAK,cCRvII,EAxBF,WAET,OACI,yBAAKV,UAAU,YACX,yBAAKF,MAAM,cACP,4CACA,2BAAG,0CAAH,MAEJ,yBAAKA,MAAM,UACX,yBAAKA,MAAM,OACP,yBAAKA,MAAM,oBACN,yBAAKA,MAAM,SACP,yBAAKI,IAAI,iBAAiBC,IAAI,WAAWL,MAAM,oBAGvD,yBAAKA,MAAM,uBACP,0CACA,qEACA,yOCPNa,EAXF,WAET,OACQ,6BACK,wBAAIb,MAAM,QAAV,cAA4B,6CACjC,mICeGc,MAff,WACE,OACE,kBAAC,IAAD,KACA,yBAAKZ,UAAU,YACd,kBAAC,EAAD,MACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOa,KAAK,IAAIC,OAAK,EAACC,UAAYJ,IAClC,kBAAC,IAAD,CAAOE,KAAK,SAAUE,UAAYL,IAClC,kBAAC,IAAD,CAAOG,KAAK,WAAYE,UAAYd,QCJrBe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1637af98.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './style.css';\r\n\r\nconst Menu = () => {\r\n\r\n    return(\r\n        <div class=\"header \" >\r\n                <ul > \r\n                    <li><Link to=\"/\" className=\"Link\">Home</Link></li>\r\n                    <li class=\"header_text\"><Link to=\"about\" className=\"Link\">About</Link></li>\r\n                    <li class=\"header_text\"><Link to=\"contact\" className=\"Link\">Contact</Link></li>\r\n                </ul>\r\n       </div>\r\n        \r\n    );\r\n}\r\nexport default Menu;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter , faFacebook , faGithub, faLinkedin} from '@fortawesome/free-brands-svg-icons' ;\r\n\r\nconst Contact = () => {\r\n\r\n    return(\r\n             <div>\r\n                  <div className=\"about_head\">\r\n                      <h6>Feel free  </h6>\r\n                      <p><span>Get in Touch</span> </p>\r\n                  </div>\r\n                  <div className=\"image\">\r\n                    <img src=\"images/karishmapr.jpg\" alt=\"karishma\" className=\"contact_image\" /> \r\n                  </div>\r\n                  <div className=\" details\">\r\n                    <p>  Karishma Jain </p> \r\n                    <p>  Contact : +919587748107 </p>  \r\n                    <p>  Email : kanu.karishma3199@gmail.com </p>\r\n                    <div className=\"social_links\">\r\n                        <ul >\r\n                            <li>\r\n                                <Link to=\"https://github.com/karishma3199\" className=\"Link\"> <FontAwesomeIcon icon={faGithub}  size=\"md\"/>\r\n                                </Link>\r\n                            </li>\r\n                            <li   className=\"logo_link\" >\r\n                                <Link to=\"https://www.linkedin.com/in/karishma-jain-314590160/\" className=\"Link\"><FontAwesomeIcon icon={faLinkedin}  size=\"md\"/>\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"https://www.twitter.com/rockingkanu\" className=\"Link\"><FontAwesomeIcon icon={faTwitter}  size=\"md \"/>\r\n                                </Link>\r\n                            </li>\r\n                            <li   className=\"logo_link\">\r\n                                <Link to=\"https://www.facebook.com/karishma.jain.77312477/\" className=\"Link\"><FontAwesomeIcon icon={faFacebook}  size=\"md\" />\r\n                                </Link> \r\n                            </li>\r\n                             \r\n                        </ul>\r\n                </div>\r\n            </div> \r\n            </div>     \r\n    );\r\n}\r\nexport default Contact;","import React from 'react';\r\n//import {Link} from 'react-router-dom';\r\nimport './style.css';\r\nconst About= () => {\r\n\r\n    return(\r\n        <div className=\"main_img\">\r\n            <div class=\"about_head\">\r\n                <h6>Get to know </h6>\r\n                <p><span>About Me</span> </p>\r\n            </div> \r\n            <div class=\"clear\"></div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-3 sidenav\">\r\n                     <div class=\"image\">\r\n                         <img src=\"/images/kj.jpg\" alt=\"karishma\" class=\"contact_image\" />\r\n                     </div>\r\n                </div>\r\n                 <div class=\"col-md-9 about_text\">\r\n                     <h2> Who am i?</h2>\r\n                     <h4>Karishma Jain , a software engineer. </h4>\r\n                     <h6>I am pursuing B.E. from MBM Engineering College , in INFORMATION TECHNOLOGY branch. I am an ambitious student who loves to learn new technologies and impliment them in real life.                   </h6>\r\n                </div>         \r\n            </div>\r\n    </div>  \r\n    );\r\n}\r\nexport default About;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Home = () => {\r\n\r\n    return(\r\n            <div > \r\n                 <h1 class=\"name\">Hi ! i am  <span>Karishma .</span></h1>\r\n            <p>a student of B.E. Information Technology . I love to learn new technologies to enrich my skills.  </p>\r\n          </div>\r\n          \r\n        \r\n    );\r\n}\r\nexport default Home;","import React from 'react';\nimport {BrowserRouter , HashRouter,Route , Switch} from 'react-router-dom';\nimport './App.css';\nimport Menu from './Menu.js';\nimport Contact from './Contact.js';\nimport About from './About.js';\nimport Home from './Home.js';\n\nfunction App() {\n  return (\n    <HashRouter>\n    <div className=\"main_img\">\n     <Menu/>\n     <Switch>\n     <Route path=\"/\" exact component ={Home} />\n     <Route path=\"/about\"  component ={About} />\n     <Route path=\"/contact\"  component ={Contact} />\n     </Switch>\n    </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}